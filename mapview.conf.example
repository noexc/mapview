# This is the configuration we use for the server-side part of mapview.

gpsd {
  # mapview can interface with gpsd to track where the chase vehicle is
  # relative to the balloon. This functionality is enabled by having gpsd
  # running (and configured correctly, working with a valid GPS device), and
  # running the included `mapview-gpsd` program.
  #
  # gpsd.coordinates-history determines where `mapview-gpsd` stores the data it
  # collects, and what `mapview-send` reads in order to allow clients to
  # visualize the location. In order for this data to be sent, `mapview-send`
  # must be started with the `--gpsd` flag.
  coordinates = "/tmp/w8upd/gpsd-coordinates.json"
}

telemetry {
  # The coordinates log is a log of all data that we have previously dispatched to
  # mapview-send. This path is written to by telemetryparser and read from by
  # mapview-send.
  #
  # Each time a client connects to mapview-send, we'll send them the contents of
  # this file in a particular format that lets mapview-psc (the client-side part
  # of mapview) know that it needs to display this path.
  coordinates-history = "/var/tmp/w8upd/coordinates-log.json"

  # The telemetry log is a record of the raw telemetry we've received from the modem
  # command. Every time we see a newline, we write the line it follows to this
  # file. This is useful for auditing and maybe debugging.
  raw-log = "/var/tmp/w8upd/telemetrylog"

  # This path is where we write the "working coordinates" on each update. Every
  # time we successfully parse an update, we write a JSONified version of the
  # result to this file.
  #
  # This file is what mapview-send reads to send out its location update
  # broadcasts. If this file changes, a JSON message will be sent out to all
  # connected clients, containing this file's contents.
  working-coordinates = "/tmp/w8upd/telemetry-coordinates.json"

  # mapview-telemetryparser shells out to a (given) external modem. Here is
  # where you can configure the modem to use. If you comment these out, we
  # default to "minimodem -r -q rtty".
  #modem-command = "fldigi-shell"
  modem-flags = ["-r", "-q", "rtty", "-S", "700", "-M", "870"]
}

websockets {
  # This defines the port that the websockets server should listen on.
  port = 9160

  # This defines the IP to listen on.
  host = "0.0.0.0"
}
